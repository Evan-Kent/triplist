    Here be the journal of web dev student Evan Kent, accursed be his name.

Aug 1 - Investigated front end technology for a checklist type app. My initial strategy was to build out a express.js server
    with a handful of routes for managing state (a CRUD like app). However, I have started working in depth with React.js
    in my internship and after research, I realized that it would serve really well for most of the functionality of the app!
    Switched my tech-stack to a React frontend.

Aug 2 - Looked through options for a drag and drop helper to re-arrange the list. Settled on react-beautiful-dnd which has
    a lot of nice features. It is a semi-opinionated plugin and I will be following the suggested structure for my program
    even if I don't end up implementing all the features.

Aug 5 - basic app layout built and committed into a git repo. I initially started styling my components using plain css
    but now I implemented styled components. It's pretty slick for styling basic components and reduces a lot of the style
    clutter that seems to accumulate in a React project.

Aug 9 - worked on checkbox to disable task (cross off list), but the onClick is being interfered with by the react-beautiful-dnd.

Aug 9 - fixed checkbox! Added edit button on the right side and styled it. Added delete button. Checkbox, edit button and
    delete button are handled with callbacks in App component, which manages state for the app. I have heard React-Redux
    is really useful for Apps with this design pattern but I don't have time to learn another toolset for the final project!

TODO:
    DONE! checkbox cross out list
    DONE!    line and color change (greyout)
    DONE! edit icon on right side
        replaces task with inputbox styled to be transparent
        updates task on inputbox submit (enter)
    DONE! Delete icon on right side
    DONE!    removes task from list
    investigate react-router
    implement firestore connnection
        work on implementing a single list
    Add location and date range fields
    implement google maps API and dark sky API
    ^^^^^^^^^^^^ MVP features above!! ^^^^^^^^^^^^^^^^^^^^^
    multiple lists based on routing on listID
    multiple list types (camping, hiking, backpacking)
        suggest list items based on list type
    user accounts
    users can save lists to their account
    sublists and additional lists
    assign tasks to users

